<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>
<body>

<script type="text/javascript">
/*
实现一个字符串头尾去除空格的函数
注意需要去除的空格，包括全角、半角空格
暂时不需要学习和使用正则表达式的方式
*/

function diyTrim(str) {
    for (var i = 0; i < str.length; i++) {
    	if (str[0]==' ' || str[0]=='　') {
    		str = str.slice(1); //slice() 方法可从已有的数组中返回选定的元素。 语法 arrayObject.slice(start,end) 参数描述 start 必需。规定从何处开始选取。
    	}
    	else if (str[str.length-1]==' ' || str[str.length-1]=='　') {
    		str = str.slice(0,str.length-2);
    	}
    	else{
    		break;
    	}
    }
    return str;
}

// 测试用例
console.log(diyTrim(' a f b    ')); // ->a f b
console.log(diyTrim('    ffdaf    ')); // ->ffdaf
console.log(diyTrim('1    ')); // ->1
console.log(diyTrim('　　f')); // ->f
console.log(diyTrim('  　  a f b 　　 ')); // ->a f b
console.log(diyTrim(' ')); // ->
console.log(diyTrim('　')); // ->
console.log(diyTrim('')); // ->

/*
去掉字符串str中，连续重复的地方
*/
function removeRepetition(str) {
    var result = "";
    var len = str.length;
    for (var i = 0; i< len; i++) {   //这里一定要先定义一个变量为字符串原长，因为每次循环字符串都在变短
    	if (str[0] == str[1]) {
    		str = str.slice(1);
    	}
    	else{
    		result = result+str[0];  //如果不一样就存入第一个字符并且要往后继续移一个
    		str = str.slice(1);
    	}
    }
    // do something

    return result;
}

// 测试用例
console.log(removeRepetition("aaa")); // ->a
console.log(removeRepetition("abbba")); // ->aba
console.log(removeRepetition("aabbaabb")); // ->abab
console.log(removeRepetition("")); // ->
console.log(removeRepetition("abc")); // ->abc
</script>
	
</body>
</html>
